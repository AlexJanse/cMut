% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/groupClusters.R
\name{groupClusters}
\alias{groupClusters}
\title{groupClusters}
\usage{
groupClusters(table, clusterIdHeader = "clusterId", refHeader = "ref",
  altHeader = "alt", contextHeader = "surrounding",
  mutationSymbol = ".", asTibble = TRUE, patternIntersect = FALSE,
  searchClusterPatterns = FALSE, patternHeader = "linkedPatterns",
  showWarning = TRUE, searchPatterns = NULL, searchRefHeader = "ref",
  searchAltHeader = "alt", searchIdHeader = "process",
  searchDistanceHeader = "maxDistance", searchReverseComplement = TRUE,
  renameReverse = FALSE, reverseComplement = FALSE)
}
\arguments{
\item{table}{A table with columns containing cluster IDs, reference and
alternative nucleotide. See the output of the
\code{\link{identifyAndAnnotateClusters}} function for more information
about the table.}

\item{clusterIdHeader}{Contains the name of the column with the cluster IDs.}

\item{refHeader}{Contains the name of the column with the reference
nucleotides.}

\item{altHeader}{Contains the name of the column with the alternative
nucleotides.}

\item{contextHeader}{A string with the name of the column with the context.
The data inside this column is e.g. "C.G" hereby stands the "." for the
location of the mutation. What symbol is used to describe this location is
arbitrary but be sure to adjust the \code{mutationSymbol} accordingly when
searching for patterns. The \code{contextHeader} is irrelevant if
\code{linkPatterns} is FALSE.}

\item{mutationSymbol}{A string with the symbol that stands for the mutated
nucleotide location in the \code{context}. (e.g. "." in "G.C")}

\item{asTibble}{A boolean to tell if the result table has to be a tibble.
When it is FALSE it will return data.frame}

\item{patternIntersect}{A Boolean if the table contains patterns and these
needed to be processed as well.}

\item{searchClusterPatterns}{A Boolean if it's needed to search to cluster
patterns (e.g. GA > TT).}

\item{patternHeader}{A string with the column name of the column with the
found patterns from the \code{\link{identifyAndAnnotateClusters}}. Only in
use when patternIntersect is TRUE.}

\item{showWarning}{A Boolean if there need to be a warning if nrow is 0.}

\item{searchPatterns}{A tibble with the known mutation patterns. The
\code{\link{mutationPatterns}} is the default search table.}

\item{searchRefHeader}{A string with the column name of the one with the
reference nucleotide in the searchPatterns table.}

\item{searchAltHeader}{A string with the column name of the one with the
alternative nucleotide in the searchPatterns table.}

\item{searchIdHeader}{A string with the column name of the one with the
pattern IDs.}

\item{searchDistanceHeader}{A string with the column name of the one with the
maximum distance between clustered mutations. Not needed if the distance
parameter is NULL. NA's within this column are allowed.}

\item{searchReverseComplement}{A boolean to also search the patterns in the
reverse complement of the searchPatterns tibble.}

\item{renameReverse}{A Boolean if the id of the process needs to be renamed.
This has the effect on the cMut functions that it will no longer treat the
reverse complement and non reverse complement as the same. This parameter
will irrelevant if \code{searchReverseComplement} is FALSE.}

\item{reverseComplement}{A Boolean to tell if the \code{ref}, \code{alt}
needs to be searched with the reverse complement. Irrelevant if
\code{searchClusterPatterns = FALSE} or \code{searchReverseComplement =
TRUE}.}
}
\description{
A function that will group the clusters and if wanted find the
  intersection of patterns between the mutations within a cluster. And is
  also able to search for cluster patterns.
}
\examples{
# Example of a table containing the right columns and data for the
# identifiAndAnnotateClusters function:
test <- testDataSet

# Example of using this function without linking it without patterns
mutations <- identifyAndAnnotateClusters(dataTable      = test,
                                         maxDistance    = 20000,
                                         chromHeader    = "chrom",
                                         sampleIdHeader = "sampleIDs",
                                         positionHeader = "start",
                                         linkPatterns   = FALSE)
clusters <- groupClusters(table            = mutations,
                          patternIntersect = FALSE)

# Example of using this function with data that contain patterns:
mutations <- identifyAndAnnotateClusters(dataTable      = test,
                                         maxDistance    = 20000,
                                         chromHeader    = "chrom",
                                         sampleIdHeader = "sampleIDs",
                                         positionHeader = "start",
                                         linkPatterns   = TRUE)
clusters <- groupClusters(table            = mutations,
                          patternIntersect = TRUE)

# Example of using this function when it is needed to search for
# cluster patterns. Use ?mutationPatterns to learn about the
# difference between mutation patterns and cluster patterns.
clusters <- groupClusters(table                 = mutations,
                          patternIntersect      = TRUE,
                          searchClusterPatterns = TRUE)

# For more information about the table:
cat(comment(clusters))
}
\seealso{
See \code{\link{mutationPatterns}} help page for a full explanation
  of the differences between mutation patterns and cluster patterns.
}
